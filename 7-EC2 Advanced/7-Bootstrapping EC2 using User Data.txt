==============================================
6-Elastic Kubernetes Service (EKS) 101
==============================================

Overview:
- Provides a high-level introduction to AWS’s managed Kubernetes service (EKS).
- Assumes prior basic knowledge of Kubernetes from an earlier lesson.
- Emphasizes that further detailed videos and demos will follow for deeper understanding.

EKS Definition & Purpose:
- EKS is AWS’s managed implementation of Kubernetes.
- It leverages the native Kubernetes system, extended to integrate seamlessly within AWS.
- Designed to be cloud agnostic, supporting multi-cloud or hybrid scenarios without vendor lock-in.

Deployment & Integration:
- EKS can be deployed in multiple modes:
  - Within AWS itself (standard deployment).
  - On AWS Outposts (a mini version of AWS on-premises).
  - In hybrid scenarios via “EKS Anywhere,” allowing clusters on-premises or other environments.
- The Kubernetes control plane is fully managed by AWS, scaling automatically across multiple availability zones.
- Integrates with other AWS services such as:
  - Elastic Container Registry (ECR) for container images.
  - Elastic Load Balancing for traffic distribution.
  - IAM for security and access management.
  - VPCs for networking.
  - ETCD is used as the key-value store, managed and distributed by AWS.

Node Management Options:
- EKS supports three approaches for managing worker nodes:
  - **Self Managed Nodes:** 
    - User provisions and manages EC2 instances.
    - Standard EC2 pricing applies.
  - **Managed Node Groups:** 
    - AWS handles provisioning and lifecycle management of EC2 instances.
    - Simplifies operations and scaling.
  - **Fargate:**
    - Runs pods without the need to manage underlying EC2 instances.
    - Offers a serverless experience without worrying about instance types or scaling.

Comparison of Node Management Options:
| Node Type           | Provisioning               | Management                 | Notes                                                        |
|---------------------|----------------------------|----------------------------|--------------------------------------------------------------|
| Self Managed Nodes  | User-provisioned EC2       | User-managed lifecycle     | Standard EC2 pricing; requires manual management             |
| Managed Node Groups | AWS-provisioned EC2        | AWS-managed lifecycle      | Simplifies management and scaling                            |
| Fargate             | No instance provisioning   | Fully managed serverless   | No need to select instance type; optimized for pod running     |

Storage & Persistence:
- By default, Kubernetes storage is ephemeral.
- Persistent storage for EKS can be provisioned using AWS services like EBS, EFS, and FSx.

EKS Architecture Overview:
- Typically involves two VPCs:
  - An AWS-managed VPC hosting the EKS control plane across multiple availability zones.
  - A customer-managed VPC hosting the worker nodes.
- Communication between the control plane and worker nodes occurs via:
  - Elastic Network Interfaces (ENIs) injected into the customer VPC.
  - Optionally, a public control plane endpoint for administrative access.
- Ingress configurations in the customer VPC facilitate consumption of EKS services.

Conclusion:
- The session provides a concise, high-level overview of EKS’s core components and deployment strategies.
- Further in-depth sessions and demos will expand on these concepts to provide hands-on experience with EKS.