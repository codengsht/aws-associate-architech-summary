========================================
2-S3 Object Versioning & MFA Delete
========================================

1. Overview
-----------
- **Purpose**: Object versioning in S3 allows you to preserve, retrieve, and restore every version of every object stored in a bucket.
- **Key Features**:
  - Enables multiple versions of an object to coexist.
  - Protects against accidental overwrites or deletions.
  - Must be enabled at the bucket level (cannot be disabled once enabled; it can only be suspended).

2. How Object Versioning Works
-------------------------------
- **Initial State**: 
  - Buckets start with versioning disabled.
  - Once enabled, new objects get a unique version ID (non-enabled buckets have a "null" version).
- **Object Modifications**:
  - Uploading a new version of an object does not overwrite the existing version; it creates a new version.
  - The most recent version is returned by default if no specific version ID is requested.
- **Deletions**:
  - A delete operation without a version ID creates a **delete marker**, a special version that hides all previous versions.
  - Deleting a delete marker can "undelete" the object by making the next most recent version current.
  - To permanently remove an object version, you must delete it by specifying its version ID.

3. Important Considerations
----------------------------
- **Irreversible Enabling**:
  - Once versioning is enabled, it cannot be switched back to disabled (only suspended).
  - All historical versions remain and continue to incur storage costs.
- **Cost Impact**:
  - Each version of an object consumes storage space. Accumulating multiple versions can increase costs significantly.
  - Suspending versioning stops new version IDs from being assigned, but does not delete existing versions.

4. MFA Delete
-------------
- **Purpose**: MFA Delete adds an extra layer of security by requiring multi-factor authentication (MFA) for:
  - Changing the bucketâ€™s versioning state (e.g., from enabled to suspended).
  - Deleting object versions permanently.
- **Operation**:
  - API calls that change versioning state or delete a version must include the serial number and the current MFA token code.
- **Usage**:
  - Provides additional protection against accidental or malicious deletion of object versions.
  
5. Summary Table

| Feature                  | Without Versioning        | With Versioning                     | MFA Delete Requirement                |
|--------------------------|---------------------------|-------------------------------------|---------------------------------------|
| Object Overwrite         | Replaces existing object  | Creates a new version; old version preserved | Not applicable                       |
| Deletion (No Version ID) | Permanently deletes object| Creates a delete marker; previous versions remain | MFA required for deleting versions   |
| Cost Impact              | Charges for current version only | Charges for each stored version      | Additional security step (MFA token required) |
| State Management         | Always "disabled"         | Can be enabled or suspended; cannot be disabled once enabled | MFA required to change versioning state |